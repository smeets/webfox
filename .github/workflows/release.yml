name: Build and upload binaries to release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    name: Build and Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: wx
            asset_name: wx-linux-amd64
          - os: windows-2019
            artifact_name: wx.exe
            asset_name: wx-windows-amd64
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build project
        run: cargo build --release --locked

      - name: Install 7Zip PowerShell Module
        if: startsWith(matrix.os, 'windows')
        shell: powershell
        run: Install-Module 7Zip4PowerShell -Force -Verbose

      - name: Package artifacts (Windows)
        if: startsWith(matrix.os, 'windows')
        shell: powershell
        run: Compress-7Zip "target\release\${{ matrix.artifact_name }}" -ArchiveFileName "${{ matrix.asset_name }}.zip" -Format Zip

      - name: Package artifacts
        if: startsWith(matrix.os, 'windows') != true
        run: tar czf "${{ matrix.asset_name }}.tar.gz" target/release/${{ matrix.artifact_name }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: true

      - name: Upload Release Asset (Windows)
        if: startsWith(matrix.os, 'windows')
        id: upload-release-asset-windows
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ matrix.asset_name }}.zip
          asset_name: ${{ matrix.asset_name }}.zip
          asset_content_type: application/zip

      - name: Upload Release Asset
        if: startsWith(matrix.os, 'windows') != true
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ matrix.asset_name }}.tar.gz
          asset_name: ${{ matrix.asset_name }}.tar.gz
          asset_content_type: application/x-gtar